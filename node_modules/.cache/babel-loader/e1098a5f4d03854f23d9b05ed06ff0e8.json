{"remainingRequest":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/babel-loader/lib/index.js!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/src/components/Home.vue","mtime":1534230560000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Loader from './Loader.vue';\nexport default {\n  name: 'Home',\n  components: {\n    Loader: Loader\n  },\n  data: function data() {\n    return {\n      loading: false,\n      start: false,\n      questionAmount: 15,\n      loader: false,\n      correct: 0,\n      totalAnswers: 0,\n      wrongAnswers: false,\n      question: null,\n      allQuestions: null,\n      pickedAnswer: null,\n      result: false,\n      visitedQuestions: null,\n      visitedCount: 0\n    };\n  },\n  computed: {\n    // Show different result message depending on the percentage of correct answers\n    resultMessage: function resultMessage() {\n      var resultScore = this.correct / this.totalAnswers;\n\n      if (resultScore == 1) {\n        return \"Excellent!\";\n      } else if (resultScore >= 0.8) {\n        return \"Good job!\";\n      } else if (resultScore >= 0.5) {\n        return \"Not very impressive, but enough\";\n      } else if (resultScore >= 0.2) {\n        return \"Bad luck — but don't give up!\";\n      } else {\n        return \"Did you even try?\";\n      }\n    }\n  },\n  methods: {\n    // Reset params before start\n    load: function load() {\n      this.start = true;\n      this.loader = true;\n      this.result = false;\n      this.correct = 0;\n      this.totalAnswers = 0;\n      this.wrongAnswers = false;\n      this.loadAllQuestions();\n    },\n    loadAllQuestions: function loadAllQuestions() {\n      var self = this;\n      $.getJSON(\"data/data.json\", function (data) {\n        // Fetching data from the data/data.json file\n        // Put all questions inside the data > questions\n        self.allQuestions = data.questions; // Check if the amount of questions exists\n\n        if (self.questionAmount > data.questions.length) {\n          alert(\"Error. There are only \" + data.questions.length + \" questions in database.\"); // if there is less questions then the amount picked set the questionAmount to the total number of questions\n\n          self.questionAmount = data.questions.length;\n        }\n\n        self.visitedQuestions = [];\n        self.visitedCount = 0; // Load question\n\n        self.loadQuestion();\n      });\n    },\n    loadQuestion: function loadQuestion() {\n      var self = this; // Check if there are any more questions to answer\n\n      if (self.totalAnswers + 1 <= self.questionAmount) {\n        var pickQ = Math.floor(Math.random() * self.allQuestions.length);\n        var question = self.allQuestions[pickQ]; // Check question type\n\n        if (question.type == 'radio' || question.type == 'input') {\n          self.pickedAnswer = null;\n        } else if (question.type == 'checkbox') {\n          self.pickedAnswer = [];\n        } // Remove this question from the total pool of questions so it won't show again\n\n\n        self.allQuestions.splice(pickQ, 1); // Set the vue data question to the question\n\n        self.question = question; // Hold the visited questions for prev button feature\n\n        self.visitedQuestions.push(question);\n        self.visitedCount++; // Turn off loading. This goes quickly so loading almost never shows\n\n        self.loader = false;\n      } else {\n        // if no more questions — show results\n        self.result = true;\n        self.start = false;\n      }\n    },\n    prevAnswer: function prevAnswer() {\n      var self = this;\n      self.visitedCount--;\n      var question = self.visitedQuestions[self.visitedCount - 1]; // Set the vue data question to the question\n\n      self.question = question;\n      self.totalAnswers--;\n    },\n    checkAnswer: function checkAnswer(question) {\n      var self = this;\n\n      if (self.visitedCount < self.visitedQuestions.length) {\n        self.nextVistedAnswer();\n      } else {\n        // Check question type\n        if (question.type == 'radio' || question.type == 'input') {\n          if (question.correct == self.pickedAnswer) {\n            self.correct++;\n            self.wrongAnswers = false;\n          } else {\n            self.wrongAnswers = true;\n          }\n        } else if (question.type == 'checkbox') {\n          // if checkboxes then transform the objects into array...\n          var pickedAnswers = $.makeArray(self.pickedAnswer);\n          var correctAnswers = $.makeArray(question.correct); // Then sort both arrays so they are comparable\n\n          if (pickedAnswers.sort().join(',') === correctAnswers.sort().join(',')) {\n            self.correct++;\n            self.wrongAnswers = false;\n          } else {\n            self.wrongAnswers = true;\n          }\n        }\n\n        self.totalAnswers++;\n        self.loadQuestion();\n      }\n    },\n    nextVistedAnswer: function nextVistedAnswer() {\n      var self = this;\n      var question = self.visitedQuestions[self.visitedCount]; // Set the vue data question to the question\n\n      self.question = question;\n      self.visitedCount++;\n      self.totalAnswers++;\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app\">\n\t<div class=\"app__head\">\n\t\t<h1 class=\"app__head-title\">General Knowledge Quiz</h1>\n\t\t<h2 class=\"app__head-subtitle\">Simple quiz about everything</h2>\n\t\t<div class=\"app__head-description\" v-if=\"!loading && !start && !result\">\n\t\t\t<p>General knowledge quiz questions and answers have been added for you to test your knowledge about the world. You will find questions on general facts, geography, biology and others. Good luck!</p>\n\t\t\t<p><em>Select the number of questions and press Start.</em></p>\n\t\t</div>\n\t</div>\n\t<Loader v-bind:loader='loader'/>\n\t<div class=\"app__question\" v-if=\"!loader && start && !result\">\n\t\t<div class=\"app__question-header\">\n\t\t\t<span class=\"app__question-counter\">{{totalAnswers + 1}}/{{questionAmount}}</span>\n\t\t\t<h3 class=\"app__question-title\" v-html=\"question.question\"></h3>\n\t\t\t<p class=\"app__question-caption\" v-if=\"question.caption\" v-html=\"question.caption\"></p>\n\t\t</div>\n\t\t<div class=\"app__question-form\" v-if=\"question.type == 'radio'\">\n\t\t\t<div class=\"question-form__item\" v-for=\"(answer, index) in question.answers\" :key='index'>\n\t\t\t\t<label class=\"question-form__item-label\">\n\t\t\t\t\t<input class=\"radio\" type=\"radio\" v-bind:value=\"index\" v-model=\"pickedAnswer\">\n\t\t\t\t\t<span class=\"radio__custom\"></span>\n\t\t\t\t\t<span class=\"radio__text\">{{answer}}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"app__question-form\" v-if=\"question.type == 'checkbox'\">\n\t\t\t<div class=\"question-form__item\" v-for=\"(answer, index) in question.answers\" :key='index'>\n\t\t\t\t<label class=\"question-form__item-label form-switch\">\n\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" v-bind:value=\"index\" v-model=\"pickedAnswer\">\n\t\t\t\t\t<span class=\"checkbox__custom\"></span>\n\t\t\t\t\t<span class=\"checkbox__text\">{{answer}}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"app__question-form\" v-if=\"question.type == 'input'\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<input class=\"form-input\" type=\"text\" v-model=\"pickedAnswer\" placeholder=\"Answer\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<button class=\"app__btn btn btn--bold btn-left\" v-on:click=\"prevAnswer()\">Prev</button>\n\t\t<button class=\"app__btn btn btn--bold btn-right\" v-on:click=\"checkAnswer(question)\">Next</button>\n\t</div>\n\t<div class=\"app__result\" v-if=\"result\">\n\t\t<h3 class=\"text-center\">Your result: {{correct}}/{{totalAnswers}}</h3>\n\t\t<h4 class=\"text-center\">{{resultMessage}}</h4>\n\t</div>\n\t<div v-if=\"!start\" class=\"app__start\">\n\t\t<div class=\"form-group\">\n\t\t\t<select v-model=\"questionAmount\" class=\"form-select select-lg\">\n\t\t\t\t<option value=\"10\">10 questions</option>\n\t\t\t\t<option value=\"15\">15 questions</option>\n\t\t\t\t<option value=\"20\">20 questions</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<button class=\"app__btn btn btn--bold btn--center\" v-on:click=\"load()\">Start</button>\n\t</div>\n  </div>\n</template>\n\n<script>\nimport Loader from './Loader.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    Loader\n  },\n  data () {\n\treturn {\n\t\tloading:false,\n\t\tstart: false,\n\t\tquestionAmount: 15,\n\t\tloader: false,\n\t\tcorrect: 0,\n\t\ttotalAnswers: 0,\n\t\twrongAnswers: false,\n\t\tquestion: null,\n\t\tallQuestions: null,\n\t\tpickedAnswer: null,\n\t\tresult: false,\n\t\tvisitedQuestions: null,\n\t\tvisitedCount: 0\n\t}\n  },\n  computed: {\n\t// Show different result message depending on the percentage of correct answers\n\tresultMessage: function() {\n\t\tvar resultScore = this.correct / this.totalAnswers\n\t\tif (resultScore == 1) {\n\t\t\treturn \"Excellent!\"\n\t\t} else if (resultScore >= 0.8) {\n\t\t\treturn \"Good job!\"\n\t\t} else if (resultScore >= 0.5) {\n\t\t\treturn \"Not very impressive, but enough\"\n\t\t} else if (resultScore>= 0.2) {\n\t\t\treturn \"Bad luck — but don't give up!\"\n\t\t} else {\n\t\t\treturn \"Did you even try?\"\n\t\t}\n\t}\n  },\n  methods: {\n\t// Reset params before start\n\tload: function() {\n\t\tthis.start = true\n\t\tthis.loader = true\n\t\tthis.result = false\n\t\tthis.correct = 0\n\t\tthis.totalAnswers = 0\n\t\tthis.wrongAnswers = false\n\t\tthis.loadAllQuestions()\n\t},\n\tloadAllQuestions: function() {\n\t\tvar self = this\n\t\t$.getJSON(\"data/data.json\",function (data) {\n\t\t\t// Fetching data from the data/data.json file\n\t\t\t// Put all questions inside the data > questions\n\n\t\t\tself.allQuestions = data.questions\n\t\t\t// Check if the amount of questions exists\n\t\t\tif(self.questionAmount > data.questions.length) {\n\t\t\t\talert(\"Error. There are only \" + data.questions.length + \" questions in database.\")\n\t\t\t\t// if there is less questions then the amount picked set the questionAmount to the total number of questions\n\t\t\t\tself.questionAmount = data.questions.length\n\t\t\t}\n\t\t\t\n\t\t\tself.visitedQuestions = [];\n\t\t\tself.visitedCount = 0;\n\t\t\t// Load question\n\t\t\tself.loadQuestion()\n\t\t});\n\t},\n\tloadQuestion: function() {\n\t\tvar self = this\n\t\t// Check if there are any more questions to answer\n\t\tif(self.totalAnswers + 1 <= self.questionAmount) {\n\t\t\tvar pickQ = Math.floor(Math.random()*self.allQuestions.length)\n\t\t\tvar question = self.allQuestions[pickQ]\n\n\t\t\t// Check question type\n\t\t\tif(question.type == 'radio' || question.type == 'input') {\n\t\t\t\tself.pickedAnswer = null\n\t\t\t} else if (question.type == 'checkbox') {\n\t\t\t\tself.pickedAnswer = []\n\t\t\t}\n\t\t\t// Remove this question from the total pool of questions so it won't show again\n\t\t\tself.allQuestions.splice(pickQ, 1)\n\t\t\t// Set the vue data question to the question\n\t\t\tself.question = question\n\n\t\t\t// Hold the visited questions for prev button feature\n\t\t\tself.visitedQuestions.push(question);\n\t\t\tself.visitedCount++;\n\n\t\t\t// Turn off loading. This goes quickly so loading almost never shows\n\t\t\tself.loader = false\n\t\t} else {\n\t\t\t// if no more questions — show results\n\t\t\tself.result = true\n\t\t\tself.start = false\n\t\t}\n\t},\n\tprevAnswer: function(){\n\t\tvar self = this;\n\t\tself.visitedCount--;\n\t\tvar question = self.visitedQuestions[self.visitedCount - 1];\n\t\t// Set the vue data question to the question\n\t\tself.question = question;\n\t\tself.totalAnswers--;\n\t},\n\tcheckAnswer: function(question) {\n\t\tvar self = this\n\t\tif(self.visitedCount < self.visitedQuestions.length){\n\t\t\tself.nextVistedAnswer();\n\t\t}else {\n\t\t\t// Check question type\n\t\t\tif(question.type == 'radio' || question.type == 'input') {\n\t\t\t\tif(question.correct == self.pickedAnswer) {\n\t\t\t\t\tself.correct++\n\t\t\t\t\tself.wrongAnswers = false\n\t\t\t\t} else {\n\t\t\t\t\tself.wrongAnswers = true\n\t\t\t\t}\n\t\t\t} else if (question.type == 'checkbox') {\n\t\t\t\t// if checkboxes then transform the objects into array...\n\t\t\t\tvar pickedAnswers = $.makeArray( self.pickedAnswer )\n\t\t\t\tvar correctAnswers = $.makeArray(question.correct)\n\n\t\t\t\t// Then sort both arrays so they are comparable\n\t\t\t\tif(pickedAnswers.sort().join(',') === correctAnswers.sort().join(',')){\n\t\t\t\t\tself.correct++\n\t\t\t\t\tself.wrongAnswers = false\n\t\t\t\t} else {\n\t\t\t\t\tself.wrongAnswers = true\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.totalAnswers++\n\t\t\tself.loadQuestion()\n\t\t}\n\t\t\n\t},\n\tnextVistedAnswer: function(){\n\t\tvar self = this;\n\t\tvar question = self.visitedQuestions[self.visitedCount];\n\t\t// Set the vue data question to the question\n\t\tself.question = question;\n\t\tself.visitedCount++;\n\t\tself.totalAnswers++;\n\t}\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n/* Hide placeholder on focus */\n:focus::-webkit-input-placeholder {color: transparent}\n:focus::-moz-placeholder {color: transparent}\n:focus:-moz-placeholder {color: transparent}\n:focus:-ms-input-placeholder {color: transparent}\n\nhtml {\n\tbox-sizing: border-box;\n}\n\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tbackground-color: #fafbfc;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n}\n\n.header {\n\ttext-align: center;\n\tmargin: 20px auto;\n}\n\n.header__logo {\n\tfont-size: 26px;\n\tfont-weight: 600;\n\tline-height: 1;\n\tletter-spacing: 0.04em;\n\ttext-decoration: none;\n\tcolor: #111;\n}\n\n.header__logo:hover {\n\tcolor: #C43434;\n}\n\npre {\n\tbackground: #f9f9f9;\n\tborder-left: 4px solid #558abb;\n\tmargin-bottom: 1em;\n\tmargin-top: 1em;\n\tpadding: 15px 25px;\n\tfont-style: initial;\n}\n\n.app {\n\tmin-width: 320px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 650px;\n\tmin-height: 600px;\n\tbackground: #fff;\n\tborder: 1px solid #ccc;\n\tborder-radius: 2px;\n\tpadding: 24px;\n\tflex-direction: column;\n\tmargin: 0 auto;\n}\n\n.app__head-title {\n\ttext-align: center;\n\tfont-size: 28px;\n\tfont-weight: bold;\n\tmargin: 0;\n}\n\n.app__head-subtitle {\n\ttext-align: center;\n\tfont-size: 24px;\n\tfont-weight: 400;\n\tmargin: 0 0 20px 0;\n}\n\n.app__head-description {\n\tmargin-bottom: 20px;\n}\n\n.app__loader {\n\tmargin: auto;\n}\n\n.app__question-header {\n\tmargin-bottom: 15px;\n}\n\n.app__question-form {\n\tmargin-bottom: 20px;\n}\n\n.form-group {\n\ttext-align: center;\n\tmargin-bottom: 20px;\n}\n\n.form-select {\n\tfont-size: 20px;\n\theight: 40px;\n\tborder-radius: 4px;\n}\n\n.app__question-caption {\n\tmargin-top: 5px;\n\tfont-style: italic;\n}\n\n.question-form__item {\n\tborder-top: 1px solid #e6e6e6;\n}\n\n.question-form__item:last-child {\n\tborder-bottom: 1px solid #e6e6e6;\n}\n\n.question-form__item-label {\n\tpadding: 15px;\n\tdisplay: block;\n}\n\ninput[type=\"text\"] {\n\tborder: 1px solid #CCC;\n\tborder-radius: 2px;\n\twidth: 96%;\n\tfont-size: 16px;\n\tpadding: 12px;\n}\n\n.btn {\n\t-moz-appearance: none;\n\t-webkit-box-shadow: none;\n\tbox-shadow: none;\n\tborder-radius: 2px;\n\tborder-style: solid;\n\tborder-width: 0;\n\tfont-size: 16px;\n\tcursor: pointer;\n\tmargin: 0;\n\ttext-align: center;\n\ttext-decoration: none;\n\tbackground-color: #3f4658;\n\tcolor: #000;\n\t-webkit-transition: background-color .2s ease;\n\ttransition: background-color .2s ease;\n\tbackground-color: #eee;\n\tborder: 1px solid #d3d3d3;\n}\n\n.btn--center {\n\tdisplay: block;\n\tmargin: 0 auto;\n}\n\n.btn--bold {\n\tfont-weight: bold;\n}\n\n.btn-left {\n\tfloat: left;\n}\n\n.btn-right {\n\tfloat:right;\n}\n\n.app__btn {\n\tmin-width: 100px;\n\tpadding: 12px 20px;\n}\n\n.app__question-counter {\n\tdisplay: block;\n\tmargin-bottom: 20px;\n\tcolor: #B3B3B3;\n\ttext-align: center;\n}\n\n.app__result {\n\ttext-align: center;\n\twidth: 275px;\n\tmargin: auto;\n\tfont-size: 28px;\n}\n\n.footer {\n\tmargin-top: 10px;\n\tcolor: #999;\n\ttext-align: center;\n}\n\n.checkbox, .radio {\n\tdisplay: none;\n}\n\n.checkbox__custom,\n.radio__custom {\n\tposition: relative;\n\twidth: 20px;\n\theight: 20px;\n\tborder: 2px solid #429DEF;\n\tborder-radius: 2px;\n}\n\n.checkbox__custom,\n.checkbox__text,\n.radio__custom,\n.radio__text {\n\tdisplay: inline-block;\n\tvertical-align: middle;\n}\n\n.checkbox:checked + .checkbox__custom::before,\n.radio:checked + .radio__custom::before {\n\tcontent: \"\";\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 3px;\n\tright: 3px;\n\tbottom: 3px;\n\tleft: 3px;\n\tbackground: #429DEF;\n}\n\n.radio__custom,\n.radio:checked + .radio__custom::before {\n\tborder-radius: 50%;\n}\n\n.footer {\n\tfont-size: 14px;\n}\n\n.footer__copyright-link {\n\tcolor: #999;\n\tfont-weight: bold;\n\ttext-decoration: underline;\n\t-webkit-transition: all 0.3s;\n\t-moz-transition: all 0.3s;\n\ttransition: all 0.3s;\n}\n\n.footer__copyright-link:hover {\n\tcolor: #C00;\n}\n</style>\n"],"sourceRoot":"src/components"}]}