{"remainingRequest":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/src/components/Register.vue?vue&type=template&id=7bf3755a&scoped=true&","dependencies":[{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/src/components/Register.vue","mtime":1534230552000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazahar/Documents/myApps/vue/quizApp/repo/quizApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"register\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.handleSubmit($event)\n          }\n        }\n      },\n      [\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { attrs: { for: \"pname\" } }, [_vm._v(\"Name\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.user.pname,\n                expression: \"user.pname\"\n              },\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required\",\n                expression: \"'required'\"\n              }\n            ],\n            staticClass: \"form-control\",\n            class: { \"is-invalid\": _vm.submitted && _vm.errors.has(\"pname\") },\n            attrs: { type: \"text\", name: \"pname\" },\n            domProps: { value: _vm.user.pname },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.user, \"pname\", $event.target.value)\n              }\n            }\n          }),\n          _vm.submitted && _vm.errors.has(\"pname\")\n            ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"pname\")))\n              ])\n            : _vm._e()\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.user.email,\n                expression: \"user.email\"\n              },\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required\",\n                expression: \"'required'\"\n              }\n            ],\n            staticClass: \"form-control\",\n            class: { \"is-invalid\": _vm.submitted && _vm.errors.has(\"email\") },\n            attrs: { type: \"text\", name: \"email\" },\n            domProps: { value: _vm.user.email },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.user, \"email\", $event.target.value)\n              }\n            }\n          }),\n          _vm.submitted && _vm.errors.has(\"email\")\n            ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"email\")))\n              ])\n            : _vm._e()\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { attrs: { for: \"phnum\" } }, [_vm._v(\"Phone number\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.user.phnum,\n                expression: \"user.phnum\"\n              },\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required\",\n                expression: \"'required'\"\n              }\n            ],\n            staticClass: \"form-control\",\n            class: { \"is-invalid\": _vm.submitted && _vm.errors.has(\"phnum\") },\n            attrs: { type: \"text\", name: \"phnum\" },\n            domProps: { value: _vm.user.phnum },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.user, \"phnum\", $event.target.value)\n              }\n            }\n          }),\n          _vm.submitted && _vm.errors.has(\"phnum\")\n            ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"phnum\")))\n              ])\n            : _vm._e()\n        ]),\n        _vm._m(0)\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group\" }, [\n      _c(\"button\", { staticClass: \"btn btn-primary\" }, [_vm._v(\"Participate\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}